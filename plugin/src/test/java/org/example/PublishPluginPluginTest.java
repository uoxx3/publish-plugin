/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import org.gradle.api.Project;
import org.gradle.testfixtures.ProjectBuilder;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import uoxx3.gradle.publish.PublishPlugin;

import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardCopyOption;

/**
 * A simple unit test for the 'org.example.greeting' plugin.
 */
class PublishPluginPluginTest {
	@Test
	void pluginRegistersATask() throws Exception {
		// Create a test project and apply the plugin
		Project project = ProjectBuilder.builder().build();

		// Copy all resource files
		ClassLoader loader = ClassLoader.getSystemClassLoader();
		String[] resources = {"project.json", "project.developers.json"};

		for (String item : resources) {
			URL resource = loader.getResource(item);
			Assertions.assertNotNull(resource,
				"The resource %s cannot be <null>".formatted(item));

			Path toPath = Path.of(resource.toURI());
			Path destination = project.getProjectDir().toPath()
				.resolve(toPath.getFileName());
			Files.copy(toPath, destination,
				StandardCopyOption.REPLACE_EXISTING);
		}

		project.getPlugins().apply("io.github.uoxx3.publishing");

		// Verify the result
		Object extension = project.getExtensions().findByName(PublishPlugin.PLUGIN_EXTENSION_NAME);
		Assertions.assertNotNull(extension, "Extension cannot be <null>");

		System.err.printf("> [%s] Project structure: %s%n%n",
			this.getClass().getCanonicalName(), extension);

		System.err.printf("> Project group: %s%n",
			project.getGroup());
		System.err.printf("> Project version: %s%n",
			project.getVersion());
	}
}
